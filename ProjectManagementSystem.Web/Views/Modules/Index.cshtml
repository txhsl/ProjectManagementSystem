@using Abp.Web.Mvc.Extensions
@model ProjectManagementSystem.Web.Models.Modules.ModuleListViewModel
@{
    ViewBag.Title = L("ModuleList");
    ViewBag.ActiveMenu = "ModuleList"; //Matches with the menu name in SimpleModuleAppNavigationProvider to highlight the menu item
}
@section scripts{
    @Html.IncludeScript("~/Views/Modules/Index.js");
}
<h2>
    @L("ModuleList")
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#add">@L("Create Module")</button>
    <!--<a class="btn btn-primary" data-toggle="modal" href="@Url.Action("RemoteCreate")" data-target="#modal" role="button">（Create Module）使用Remote方式调用Modal进行展现</a>-->
    <!--任务清单按照状态过滤的下拉框-->
    <span class="pull-right">
        @Html.DropDownListFor(model => model.SelectedModuleState, Model.GetModuleStateSelectListItems(), new { @class = "form-control select2", id = "ModuleStateCombobox" })
    </span>
    <div class="pull-right">
        @Html.DropDownList("SelectedUserId", null, htmlAttributes: new { @class = "form-control select2", id = "SelectedUserId" })
    </div>
    <div class="pull-right">
        @Html.DropDownList("SelectedProjectId", null, htmlAttributes: new { @class = "form-control select2", id = "SelectedProjectId" })
    </div>
</h2>
<!--任务清单展示-->
<div class="row" id="moduleList">
    @{ Html.RenderPartial("_ListModules", Model.Modules); }
</div>
<!--通过初始加载页面的时候提前将创建任务模态框加载进来-->
@Html.Action("Create")
<!--编辑任务模态框通过ajax动态填充到此div中-->
<div id="edit">
</div>
<!--Remote方式弹出创建任务模态框-->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="createModule" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        </div>
    </div>
</div>